{"version":3,"sources":["__header.coffee","init.js","__modules.coffee","fullscreenHandler.coffee","wheelzoom.coffee","classes/Events.coffee","classes/Image.coffee","classes/ImageApi.coffee","classes/Wheelzoom.coffee","windowGlobals/customEvent.coffee","windowGlobals/triggerEvent.coffee","init.coffee"],"names":["Events","Image","ImageApi","Wheelzoom","__whmodules","globals","modules","add","_module","push","bind","addClass","_className","_class","windowRegister","_globalElement","init","i","len","ref","results","length","call","fullscreenchangeHandler","window","wheelzoom","resetAll","document","addEventListener","staticMethods","defaults","zoom","pinchSensibility","maxZoom","isPinched","elements","options","staticMethod","whz","_whzImage","previousEvent","whzImage","domImage","imgInfo","_events","initEvents","reset","destroy","onwheel","draggable","drag","removeDrag","forEach","evt","on","element","removeEventListener","eventName","zoomTimer","triggerEvent","x","bgPosX","initBgPosX","y","bgPosY","initBgPosY","clearTimeout","setTimeout","e","deltaY","preventDefault","wheelDelta","deltaPinch","dist","prevDist","xShift","yShift","type","touches","pageX","pageY","Math","sqrt","pow","trigger","updateBgStyle","off","load","_domImage","_options","t","canvas","createElement","wzEvents","wzImageApi","setInterval","img","complete","clearInterval","imageBox","windowBox","left","right","width","top","down","height","bgWidth","bgHeight","style","backgroundSize","backgroundPosition","backgroundImage","src","backgroundRepeat","naturalWidth","naturalHeight","cachedDataUrl","toDataURL","propagate","bgCenterX","bgCenterY","bgRatioX","bgRatioY","offsetX","offsetY","zoomSensibility","getAttribute","computedStyle","getComputedStyle","parseInt","setSrcToBackground","registerApiMethods","doZoomIn","doZoomOut","doDrag","wz","addImage","parseOptions","wheelzoomSingleton","wzImgs","nodeName","wzImg","splice","out","Object","keys","key","CustomEvent","event","params","bubbles","cancelable","detail","createEvent","initCustomEvent","prototype","Event","target","err","error","dispatchEvent"],"mappings":"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","file":"wheelzoom.js","sourcesContent":["##! Wheelzoom 1.3.0\n#  license: MIT\n#  https://kwaadpepper.github.io/wheelzoom/\n#","//#! Wheelzoom 1.3.0\n//  license: MIT\n//  https://kwaadpepper.github.io/wheelzoom/\n\nvar Events, Image, ImageApi, Wheelzoom, __whmodules;\n\n__whmodules = {\n  globals: {},\n  modules: [],\n  add: function(_module) {\n    return __whmodules.modules.push(_module.bind(__whmodules.globals));\n  },\n  addClass: function(_className, _class) {\n    return __whmodules.globals[_className] = _class.bind(__whmodules.globals);\n  },\n  windowRegister: function(_globalElement) {\n    return _globalElement();\n  },\n  init: function() {\n    var _module, i, len, ref, results;\n    ref = __whmodules.modules;\n    results = [];\n    for (i = 0, len = ref.length; i < len; i++) {\n      _module = ref[i];\n      results.push(_module.call(__whmodules.globals));\n    }\n    return results;\n  }\n};\n\n__whmodules.add(function() {\n  var fullscreenchangeHandler;\n  fullscreenchangeHandler = function() {\n    return window.wheelzoom.resetAll();\n  };\n  if (document.addEventListener) {\n    document.addEventListener('fullscreenchange', fullscreenchangeHandler, false);\n    document.addEventListener('mozfullscreenchange', fullscreenchangeHandler, false);\n    document.addEventListener('MSFullscreenChange', fullscreenchangeHandler, false);\n    return document.addEventListener('webkitfullscreenchange', fullscreenchangeHandler, false);\n  }\n});\n\n__whmodules.add(function() {\n  var staticMethods;\n  this.defaults = {\n    zoom: 0.10,\n    pinchSensibility: 0.3,\n    maxZoom: -1\n  };\n  this.isPinched = false;\n  staticMethods = ['images', 'resetAll', 'destroyAll'];\n  return window.wheelzoom = function(elements, options) {\n    var i, len, staticMethod, whz;\n    whz = new Wheelzoom(elements, options);\n    for (i = 0, len = staticMethods.length; i < len; i++) {\n      staticMethod = staticMethods[i];\n      window.wheelzoom[staticMethod] = Wheelzoom[staticMethod];\n    }\n    return whz;\n  };\n});\n\n__whmodules.addClass('Events', Events = class Events {\n  constructor(_whzImage) {\n    // Instance variables\n    this.previousEvent = null;\n    this.whzImage = _whzImage;\n    this.domImage = _whzImage.domImage;\n    this.imgInfo = _whzImage.imgInfo;\n    this._events = {};\n    // Init\n    this.initEvents();\n  }\n\n  initEvents() {\n    this._events['wheelzoom.reset'] = (function() {\n      return this.whzImage.reset();\n    }).bind(this);\n    this._events['wheelzoom.destroy'] = this.destroy.bind(this);\n    this._events['wheel'] = this.onwheel.bind(this);\n    this._events['mousedown'] = this.draggable.bind(this);\n    this._events['touchstart'] = this.draggable.bind(this);\n    this._events['touchmove'] = this.drag.bind(this);\n    this._events['touchend'] = this.removeDrag.bind(this);\n    this._events['mousemove'] = this.drag.bind(this);\n    this._events['mouseup'] = this.removeDrag.bind(this);\n    return ['wheelzoom.reset', 'wheelzoom.destroy', 'wheel', 'mousedown', 'touchstart'].forEach((function(evt) {\n      return this.on(this.domImage, evt);\n    }).bind(this));\n  }\n\n  on(element, evt) {\n    return element.addEventListener(evt, this._events[evt]);\n  }\n\n  off(element, evt) {\n    return element.removeEventListener(evt, this._events[evt]);\n  }\n\n  trigger(eventName, options) {\n    var zoomTimer;\n    zoomTimer = null;\n    options = options || {};\n    switch (eventName) {\n      case 'wheelzoom.dragend':\n        window.triggerEvent(this.domImage, eventName, {\n          x: this.imgInfo.bgPosX - this.imgInfo.initBgPosX,\n          y: this.imgInfo.bgPosY - this.imgInfo.initBgPosY\n        });\n        break;\n      case 'wheelzoom.dragstart':\n      case 'wheelzoom.reset':\n      case 'wheelzoom.drag':\n        window.triggerEvent(this.domImage, eventName, options);\n        break;\n      case 'wheelzoom.out':\n      case 'wheelzoom.in':\n        // setTimeout to handle lot of events fired\n        clearTimeout(zoomTimer);\n        zoomTimer = setTimeout((function(eventName, options) {\n          return window.triggerEvent(this.domImage, eventName, options);\n        }).bind(this, eventName, options), 10);\n        break;\n    }\n  }\n\n  onwheel(e) {\n    var deltaY;\n    e.preventDefault();\n    deltaY = 0;\n    // FireFox 17+ (IE9+, Chrome 31+?)\n    if (e.deltaY) {\n      deltaY = e.deltaY;\n    } else if (e.wheelDelta) {\n      deltaY = -e.wheelDelta;\n    }\n    return this.whzImage.zoom(deltaY, true);\n  }\n\n  drag(e) {\n    var deltaPinch, dist, prevDist, x, xShift, y, yShift;\n    e.preventDefault();\n    switch (e.type) {\n      case 'touchstart':\n      case 'touchmove':\n        __whmodules.globals['isPinched'] = e.touches.length === 2;\n        xShift = e.touches[0].pageX;\n        yShift = e.touches[0].pageY;\n        break;\n      default:\n        xShift = e.pageX;\n        yShift = e.pageY;\n    }\n    switch (this.previousEvent.type) {\n      case 'touchstart':\n      case 'touchmove':\n        __whmodules.globals['isPinched'] = this.previousEvent.touches.length === 2;\n        xShift -= this.previousEvent.touches[0].pageX;\n        yShift -= this.previousEvent.touches[0].pageY;\n        break;\n      default:\n        xShift -= this.previousEvent.pageX;\n        yShift -= this.previousEvent.pageY;\n    }\n    if (__whmodules.globals['isPinched']) {\n      dist = Math.sqrt(Math.pow(e.touches[1].pageX - e.touches[0].pageX, 2) + Math.pow(e.touches[1].pageY - e.touches[0].pageY, 2));\n      prevDist = Math.sqrt(Math.pow(this.previousEvent.touches[1].pageX - this.previousEvent.touches[0].pageX, 2) + Math.pow(this.previousEvent.touches[1].pageY - this.previousEvent.touches[0].pageY, 2));\n      deltaPinch = prevDist - dist;\n      this.whzImage.zoom(deltaPinch, true);\n      return;\n    }\n    x = this.imgInfo.bgPosX + xShift;\n    y = this.imgInfo.bgPosY + yShift;\n    this.whzImage.drag(x, y);\n    this.trigger('wheelzoom.drag', {\n      bgPosX: this.imgInfo.bgPosX,\n      bgPosY: this.imgInfo.bgPosY,\n      xShift: xShift,\n      yShift: yShift\n    });\n    this.previousEvent = e;\n    return this.whzImage.updateBgStyle();\n  }\n\n  draggable(e) {\n    e.preventDefault();\n    this.trigger('wheelzoom.dragend');\n    this.previousEvent = e;\n    if (e.type === 'touchstart') {\n      this.on(document, 'touchmove');\n      return this.on(document, 'touchend');\n    } else {\n      this.on(document, 'mousemove');\n      return this.on(document, 'mouseup');\n    }\n  }\n\n  removeDrag(e) {\n    e.preventDefault();\n    this.trigger('wheelzoom.dragend');\n    this.off(document, 'touchmove');\n    this.off(document, 'touchend');\n    this.off(document, 'mousemove');\n    return this.off(document, 'mouseup');\n  }\n\n  destroy(e) {\n    this.whzImage.destroy();\n    this.off(this.domImage, 'wheelzoom.reset');\n    this.off(this.domImage, 'wheelzoom.destroy');\n    this.off(this.domImage, 'wheel');\n    this.off(this.domImage, 'mousedown');\n    this.off(this.domImage, 'mouseup');\n    this.off(this.domImage, 'mousemove');\n    this.off(this.domImage, 'touchstart');\n    this.off(this.domImage, 'touchleave');\n    this.off(this.domImage, 'touchmove');\n    delete this.previousEvent;\n    delete this.whzImage;\n    delete this.domImage;\n    delete this.imgInfo;\n    return delete this._events;\n  }\n\n});\n\n__whmodules.addClass('Image', Image = (function() {\n  var load;\n\n  class Image {\n    constructor(_domImage, _options) {\n      var t;\n      // Instance variables\n      this.domImage = _domImage;\n      this.canvas = document.createElement('canvas');\n      this.options = _options || {};\n      this.imgInfo = {};\n      this.wzEvents = new Events(this);\n      this.wzImageApi = new ImageApi(this);\n      t = setInterval((function(img, load) {\n        if (img.complete) {\n          load();\n          return clearInterval(t);\n        }\n      }).bind(null, this.domImage, load.bind(this)), 100);\n    }\n\n    isEqualTo(img) {\n      return img === this.domImage;\n    }\n\n    updateBgStyle() {\n      var imageBox, windowBox;\n      windowBox = {\n        left: 0,\n        right: this.domImage.width,\n        top: 0,\n        down: this.domImage.height,\n        width: this.domImage.width,\n        height: this.domImage.height\n      };\n      imageBox = {\n        left: this.imgInfo.bgPosX,\n        right: this.imgInfo.bgPosX + this.imgInfo.bgWidth,\n        top: this.imgInfo.bgPosY,\n        down: this.imgInfo.bgPosY + this.imgInfo.bgHeight,\n        width: this.imgInfo.bgWidth,\n        height: this.imgInfo.bgHeight\n      };\n      // If image width is smaller than canvas width\n      if (imageBox.width < windowBox.width) {\n        if (imageBox.left < windowBox.left) {\n          // do not overflow left\n          this.imgInfo.bgPosX = windowBox.left;\n        } else if (imageBox.right > windowBox.right) {\n          // do not overflow right\n          this.imgInfo.bgPosX = windowBox.right - this.imgInfo.bgWidth; // if image width is bigger than canvas width\n        }\n      } else {\n        // force overflow left\n        if (imageBox.left > windowBox.left) {\n          this.imgInfo.bgPosX = windowBox.left;\n        } else if (imageBox.right < windowBox.right) {\n          // force overflow right\n          this.imgInfo.bgPosX = windowBox.right - this.imgInfo.bgWidth;\n        }\n      }\n      // If image height is smaller than canvas height\n      if (imageBox.height < windowBox.height) {\n        if (imageBox.top < windowBox.top) {\n          // do not overflow top\n          this.imgInfo.bgPosY = windowBox.top;\n        } else {\n          if (imageBox.down > windowBox.down) { //endregion do not overflow down\n            this.imgInfo.bgPosY = windowBox.down - this.imgInfo.bgHeight; // if image height is bigger than canvas height\n          }\n        }\n      } else {\n        if (imageBox.top > windowBox.top) { // force overflow top\n          this.imgInfo.bgPosY = windowBox.top;\n        } else if (imageBox.down < windowBox.down) {\n          // force overflow down\n          this.imgInfo.bgPosY = windowBox.down - this.imgInfo.bgHeight;\n        }\n      }\n      this.domImage.style.backgroundSize = `${this.imgInfo.bgWidth}px ${this.imgInfo.bgHeight}px`;\n      return this.domImage.style.backgroundPosition = `${this.imgInfo.bgPosX}px ${this.imgInfo.bgPosY}px`;\n    }\n\n    reset() {\n      this.imgInfo.bgWidth = this.imgInfo.width;\n      this.imgInfo.bgHeight = this.imgInfo.height;\n      this.imgInfo.bgPosX = this.domImage.width / 2 - this.imgInfo.width / 2;\n      this.imgInfo.bgPosY = this.domImage.height / 2 - this.imgInfo.height / 2;\n      return this.updateBgStyle();\n    }\n\n    setSrcToBackground() {\n      this.domImage.style.backgroundImage = `url('${this.domImage.src}')`;\n      this.domImage.style.backgroundRepeat = 'no-repeat';\n      this.canvas.width = this.domImage.naturalWidth;\n      this.canvas.height = this.domImage.naturalHeight;\n      this.imgInfo.cachedDataUrl = this.canvas.toDataURL();\n      return this.domImage.src = this.imgInfo.cachedDataUrl;\n    }\n\n    zoom(deltaY, propagate = false) {\n      var bgCenterX, bgCenterY, bgRatioX, bgRatioY, offsetX, offsetY, zoomSensibility;\n      zoomSensibility = __whmodules.globals['isPinched'] ? this.options.zoom * this.options.pinchSensibility : this.options.zoom;\n      // zoom always at the center of the image\n      offsetX = this.domImage.width / 2;\n      offsetY = this.domImage.height / 2;\n      // Record the offset between the bg edge and the center of the image:\n      bgCenterX = offsetX - this.imgInfo.bgPosX;\n      bgCenterY = offsetY - this.imgInfo.bgPosY;\n      // Use the previous offset to get the percent offset between the bg edge\n      // and the center of the image:\n      bgRatioX = bgCenterX / this.imgInfo.bgWidth;\n      bgRatioY = bgCenterY / this.imgInfo.bgHeight;\n      // Update the bg size:\n      if (deltaY < 0) {\n        if (this.options.maxZoom === -1 || ((this.imgInfo.bgWidth + this.imgInfo.bgWidth * zoomSensibility) / this.imgInfo.width) <= this.options.maxZoom) {\n          this.imgInfo.bgWidth += this.imgInfo.bgWidth * zoomSensibility;\n          this.imgInfo.bgHeight += this.imgInfo.bgHeight * zoomSensibility;\n        }\n      } else {\n        this.imgInfo.bgWidth -= this.imgInfo.bgWidth * zoomSensibility;\n        this.imgInfo.bgHeight -= this.imgInfo.bgHeight * zoomSensibility;\n      }\n      // Take the percent offset and apply it to the new size:\n      this.imgInfo.bgPosX = offsetX - (this.imgInfo.bgWidth * bgRatioX);\n      this.imgInfo.bgPosY = offsetY - (this.imgInfo.bgHeight * bgRatioY);\n      if (propagate) {\n        if (deltaY < 0) {\n          this.wzEvents.trigger('wheelzoom.in', {\n            zoom: this.imgInfo.bgWidth / this.imgInfo.width,\n            bgPosX: this.imgInfo.bgPosX,\n            bgPosY: this.imgInfo.bgPosY\n          });\n        } else {\n          this.wzEvents.trigger('wheelzoom.out', {\n            zoom: this.imgInfo.bgWidth / this.imgInfo.width,\n            bgPosX: this.imgInfo.bgPosX,\n            bgPosY: this.imgInfo.bgPosY\n          });\n        }\n      }\n      // Prevent zooming out beyond the starting size\n      if (this.imgInfo.bgWidth <= this.imgInfo.width || this.imgInfo.bgHeight <= this.imgInfo.height) {\n        return this.wzEvents.trigger('wheelzoom.reset');\n      } else {\n        return this.updateBgStyle();\n      }\n    }\n\n    drag(x, y) {\n      this.imgInfo.bgPosX = x;\n      this.imgInfo.bgPosY = y;\n      return this.updateBgStyle();\n    }\n\n    destroy() {\n      this.domImage.style = this.domImage.getAttribute('style');\n      this.domImage.src = this.domImage.getAttribute('src');\n      this.wzImageApi.destroy();\n      return delete this.wzImageApi;\n    }\n\n  };\n\n  load = function() {\n    var bgPosX, bgPosY, computedStyle, height, width;\n    if (this.domImage.src === this.imgInfo.cachedDataUrl) {\n      return;\n    }\n    computedStyle = window.getComputedStyle(this.domImage, null);\n    width = parseInt(computedStyle.width, 10);\n    height = parseInt(computedStyle.height, 10);\n    bgPosX = (this.domImage.width - width) / 2;\n    bgPosY = (this.domImage.height - height) / 2;\n    this.imgInfo.width = width;\n    this.imgInfo.height = height;\n    this.imgInfo.bgWidth = width;\n    this.imgInfo.bgHeight = height;\n    this.imgInfo.initBgPosX = bgPosX;\n    this.imgInfo.initBgPosY = bgPosY;\n    this.imgInfo.bgPosX = bgPosX;\n    this.imgInfo.bgPosY = bgPosY;\n    this.setSrcToBackground(this.domImage);\n    this.domImage.style.backgroundSize = this.imgInfo.width + 'px ' + this.imgInfo.height + 'px';\n    return this.domImage.style.backgroundPosition = this.imgInfo.bgPosX + 'px ' + this.imgInfo.bgPosY + 'px';\n  };\n\n  return Image;\n\n}).call(this));\n\n__whmodules.addClass('ImageApi', ImageApi = class ImageApi {\n  constructor(_whzImage) {\n    this.whzImage = _whzImage;\n    this.domImage = _whzImage.domImage;\n    this.registerApiMethods();\n  }\n\n  registerApiMethods() {\n    this.domImage.doZoomIn = this.doZoomIn.bind(this);\n    this.domImage.doZoomOut = this.doZoomOut.bind(this);\n    return this.domImage.doDrag = this.doDrag.bind(this);\n  }\n\n  destroy() {\n    return delete this.domImage.wz;\n  }\n\n  doZoomIn() {\n    return this.whzImage.zoom(-100, false);\n  }\n\n  doZoomOut() {\n    return this.whzImage.zoom(100, false);\n  }\n\n  doDrag(x, y) {\n    return this.whzImage.drag(x, y);\n  }\n\n});\n\n__whmodules.addClass('Wheelzoom', Wheelzoom = (function() {\n  var addImage, globals, parseOptions, wheelzoomSingleton, wzImgs;\n\n  class Wheelzoom {\n    // public methods\n    constructor(elements, options) {\n      this.init(elements, options);\n      if (wheelzoomSingleton === !null) {\n        return wheelzoomSingleton;\n      } else {\n        return wheelzoomSingleton = this;\n      }\n    }\n\n    init(elements, options) {\n      var element, i, len;\n      // Do nothing in IE8\n      if (typeof window.getComputedStyle !== 'function') {\n        return elements;\n      }\n      if (elements && elements.length) {\n        for (i = 0, len = elements.length; i < len; i++) {\n          element = elements[i];\n          addImage(element, options);\n        }\n      } else if (elements && elements.nodeName) {\n        addImage(elements, options);\n      }\n      return elements;\n    }\n\n    // public static methods\n    static images() {\n      return wzImgs;\n    }\n\n    static resetAll() {\n      return wzImgs.forEach(function(wzImg) {\n        return wzImg.reset();\n      });\n    }\n\n    static destroyAll() {\n      var results;\n      results = [];\n      while (wzImgs.length) {\n        wzImgs[0].destroy();\n        results.push(wzImgs.splice(0, 1));\n      }\n      return results;\n    }\n\n  };\n\n  // private static\n  wheelzoomSingleton = null;\n\n  wzImgs = [];\n\n  globals = __whmodules.globals;\n\n  // private methods\n  addImage = function(img, options) {\n    var wzImg;\n    if (!img || !img.nodeName || img.nodeName !== 'IMG') {\n      return;\n    }\n    wzImg = new Image(img, parseOptions(options));\n    return wzImgs.push(wzImg);\n  };\n\n  parseOptions = function(options) {\n    var out;\n    out = {};\n    options = options || {};\n    Object.keys(globals['defaults']).forEach(function(key) {\n      return out[key] = typeof options[key] !== 'undefined' ? options[key] : globals['defaults'][key];\n    });\n    return out;\n  };\n\n  return Wheelzoom;\n\n}).call(this));\n\n__whmodules.windowRegister(function() {\n  var CustomEvent;\n  CustomEvent = function(event, params) {\n    var evt;\n    params = params || {\n      bubbles: false,\n      cancelable: false,\n      detail: void 0\n    };\n    evt = document.createEvent('CustomEvent');\n    evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n    return evt;\n  };\n  CustomEvent.prototype = window.Event.prototype;\n  return window.CustomEvent = CustomEvent;\n});\n\n// create cross browser triggerEvent function\n__whmodules.windowRegister(function() {\n  return window.triggerEvent = function(target, eventName, params) {\n    var e, err;\n    if (params) {\n      e = new CustomEvent(eventName, {\n        detail: params\n      });\n    } else {\n      try {\n        e = new Event(eventName);\n      } catch (error) {\n        err = error;\n        e = new CustomEvent(eventName);\n      }\n    }\n    return target.dispatchEvent(e, params);\n  };\n});\n\n(function() {\n  return __whmodules.init();\n})();\n","__whmodules = {\n  globals: {},\n  modules: [],\n  add: (_module) -> __whmodules.modules.push _module.bind __whmodules.globals\n  addClass: (_className, _class) ->\n    __whmodules.globals[_className] = _class.bind __whmodules.globals\n  windowRegister: (_globalElement) -> _globalElement()\n  init: -> _module.call(__whmodules.globals) for _module in __whmodules.modules\n}","__whmodules.add ->\n  fullscreenchangeHandler = -> window.wheelzoom.resetAll()\n\n  if document.addEventListener\n    document.addEventListener 'fullscreenchange', fullscreenchangeHandler, false\n    document.addEventListener 'mozfullscreenchange', fullscreenchangeHandler, false\n    document.addEventListener 'MSFullscreenChange', fullscreenchangeHandler, false\n    document.addEventListener 'webkitfullscreenchange', fullscreenchangeHandler, false","__whmodules.add ->\n\n  @defaults = {\n    zoom: 0.10,\n    pinchSensibility: 0.3,\n    maxZoom: -1\n  }\n  @isPinched = false\n\n  staticMethods = [\n    'images', 'resetAll', 'destroyAll'\n  ]\n\n  window.wheelzoom = (elements, options) ->\n    whz = new Wheelzoom(elements, options)\n    for staticMethod in staticMethods\n      window.wheelzoom[staticMethod] = Wheelzoom[staticMethod]\n    return whz\n    ","__whmodules.addClass 'Events',\n\n  class Events\n\n    constructor: (_whzImage) ->\n\n      # Instance variables\n      @previousEvent = null\n      @whzImage = _whzImage\n      @domImage = _whzImage.domImage\n      @imgInfo = _whzImage.imgInfo\n      @_events = {}\n\n      # Init\n      @initEvents()\n    \n    initEvents: ->\n      @_events['wheelzoom.reset'] = (-> @whzImage.reset()).bind @\n      @_events['wheelzoom.destroy'] = @destroy.bind @\n      @_events['wheel'] = @onwheel.bind @\n      @_events['mousedown'] = @draggable.bind @\n      @_events['touchstart'] = @draggable.bind @\n      @_events['touchmove'] = @drag.bind @\n      @_events['touchend'] = @removeDrag.bind @\n      @_events['mousemove'] = @drag.bind @\n      @_events['mouseup'] = @removeDrag.bind @\n\n      [ 'wheelzoom.reset',\n        'wheelzoom.destroy',\n        'wheel',\n        'mousedown',\n        'touchstart'\n      ].forEach  ((evt) -> @on @domImage, evt).bind @\n    \n    on: (element, evt) -> element.addEventListener evt, @_events[evt]\n    off: (element, evt) -> element.removeEventListener evt, @_events[evt]\n    trigger: (eventName, options) ->\n      zoomTimer = null\n      options = options or {}\n      switch eventName\n        when 'wheelzoom.dragend'\n          window.triggerEvent @domImage, eventName, {\n            x: @imgInfo.bgPosX - @imgInfo.initBgPosX,\n            y: @imgInfo.bgPosY - @imgInfo.initBgPosY\n          }\n          break\n        when 'wheelzoom.dragstart', 'wheelzoom.reset', 'wheelzoom.drag'\n          window.triggerEvent @domImage, eventName, options\n          break\n        when 'wheelzoom.out', 'wheelzoom.in'\n          # setTimeout to handle lot of events fired\n          clearTimeout zoomTimer\n          zoomTimer = setTimeout ((eventName, options) ->\n            window.triggerEvent @domImage, eventName, options\n          ).bind(@, eventName, options), 10\n          break\n\n    onwheel: (e) ->\n      e.preventDefault()\n\n      deltaY = 0\n\n      # FireFox 17+ (IE9+, Chrome 31+?)\n      if e.deltaY then deltaY = e.deltaY\n      else if e.wheelDelta then deltaY = -e.wheelDelta\n\n      @whzImage.zoom deltaY, true\n\n    drag: (e) ->\n      e.preventDefault()\n\n      switch e.type\n        when 'touchstart'\n        , 'touchmove'\n          __whmodules.globals['isPinched'] = e.touches.length == 2\n          xShift = e.touches[0].pageX\n          yShift = e.touches[0].pageY\n          break\n        else\n          xShift = e.pageX\n          yShift = e.pageY\n\n      switch @previousEvent.type\n        when 'touchstart'\n        , 'touchmove'\n          __whmodules.globals['isPinched'] = @previousEvent.touches.length == 2\n          xShift -= @previousEvent.touches[0].pageX\n          yShift -= @previousEvent.touches[0].pageY\n          break\n        else\n          xShift -= @previousEvent.pageX\n          yShift -= @previousEvent.pageY\n\n      if __whmodules.globals['isPinched'] # Zoom if pinch\n        dist = Math.sqrt(\n          Math.pow(e.touches[1].pageX - e.touches[0].pageX, 2) +\n          Math.pow(e.touches[1].pageY - e.touches[0].pageY, 2))\n        prevDist = Math.sqrt(\n          Math.pow(@previousEvent.touches[1].pageX - @previousEvent.touches[0].pageX, 2) +\n          Math.pow(@previousEvent.touches[1].pageY - @previousEvent.touches[0].pageY, 2))\n        deltaPinch = prevDist - dist\n\n        @whzImage.zoom deltaPinch, true\n        return\n\n      x = @imgInfo.bgPosX + xShift\n      y = @imgInfo.bgPosY + yShift\n\n      @whzImage.drag x, y\n\n      @trigger 'wheelzoom.drag', {\n        bgPosX: @imgInfo.bgPosX,\n        bgPosY: @imgInfo.bgPosY,\n        xShift: xShift,\n        yShift: yShift\n      }\n\n      @previousEvent = e\n      @whzImage.updateBgStyle()\n\n    draggable: (e) ->\n      e.preventDefault()\n      @trigger 'wheelzoom.dragend'\n      @previousEvent = e\n      if e.type == 'touchstart'\n        @on document, 'touchmove'\n        @on document, 'touchend'\n      else\n        @on document, 'mousemove'\n        @on document, 'mouseup'\n\n    removeDrag: (e) ->\n      e.preventDefault()\n      @trigger 'wheelzoom.dragend'\n      @off document, 'touchmove'\n      @off document, 'touchend'\n      @off document, 'mousemove'\n      @off document, 'mouseup'\n      \n    destroy: (e) ->\n      @whzImage.destroy()\n      @off @domImage, 'wheelzoom.reset'\n      @off @domImage, 'wheelzoom.destroy'\n      @off @domImage, 'wheel'\n      @off @domImage, 'mousedown'\n      @off @domImage, 'mouseup'\n      @off @domImage, 'mousemove'\n      @off @domImage, 'touchstart'\n      @off @domImage, 'touchleave'\n      @off @domImage, 'touchmove'\n      \n      delete @previousEvent\n      delete @whzImage\n      delete @domImage\n      delete @imgInfo\n      delete @_events\n","__whmodules.addClass 'Image',\n\n  class Image\n\n    constructor: (_domImage, _options) ->\n\n      # Instance variables\n      @domImage = _domImage\n      @canvas = document.createElement('canvas')\n      @options = _options or {}\n      @imgInfo = {}\n      @wzEvents = new Events(@)\n      @wzImageApi = new ImageApi(@)\n\n      t = setInterval ((img, load) ->\n        if img.complete\n          load()\n          clearInterval(t)\n      ).bind(null, @domImage, load.bind(@)), 100\n\n    isEqualTo: (img) -> img == @domImage\n\n    load = ->\n      if @domImage.src == @imgInfo.cachedDataUrl then return\n\n      computedStyle = window.getComputedStyle(@domImage, null)\n\n      width = parseInt(computedStyle.width, 10)\n      height = parseInt(computedStyle.height, 10)\n      bgPosX = (@domImage.width - width) / 2\n      bgPosY = (@domImage.height - height) / 2\n\n      @imgInfo.width = width\n      @imgInfo.height = height\n      @imgInfo.bgWidth = width\n      @imgInfo.bgHeight = height\n      @imgInfo.initBgPosX = bgPosX\n      @imgInfo.initBgPosY = bgPosY\n      @imgInfo.bgPosX = bgPosX\n      @imgInfo.bgPosY = bgPosY\n\n\n      @setSrcToBackground(@domImage)\n\n      @domImage.style.backgroundSize = @imgInfo.width + 'px ' + @imgInfo.height + 'px'\n      @domImage.style.backgroundPosition = @imgInfo.bgPosX + 'px ' + @imgInfo.bgPosY + 'px'\n\n    updateBgStyle: ->\n      windowBox = {\n        left: 0,\n        right: @domImage.width,\n        top: 0,\n        down: @domImage.height,\n        width: @domImage.width,\n        height: @domImage.height\n      }\n\n      imageBox = {\n        left: @imgInfo.bgPosX,\n        right: @imgInfo.bgPosX + @imgInfo.bgWidth,\n        top: @imgInfo.bgPosY,\n        down: @imgInfo.bgPosY + @imgInfo.bgHeight,\n        width: @imgInfo.bgWidth,\n        height: @imgInfo.bgHeight\n      }\n\n      # If image width is smaller than canvas width\n      if imageBox.width < windowBox.width\n        if imageBox.left < windowBox.left\n          # do not overflow left\n          @imgInfo.bgPosX = windowBox.left\n        else if imageBox.right > windowBox.right\n          # do not overflow right\n          @imgInfo.bgPosX = windowBox.right - @imgInfo.bgWidth\n      else # if image width is bigger than canvas width\n        # force overflow left\n        if imageBox.left > windowBox.left\n          @imgInfo.bgPosX = windowBox.left\n        else if imageBox.right < windowBox.right\n          # force overflow right\n          @imgInfo.bgPosX = windowBox.right - @imgInfo.bgWidth\n\n      # If image height is smaller than canvas height\n      if imageBox.height < windowBox.height\n        if imageBox.top < windowBox.top\n          # do not overflow top\n          @imgInfo.bgPosY = windowBox.top\n        else\n          if imageBox.down > windowBox.down #endregion do not overflow down\n            @imgInfo.bgPosY = windowBox.down - @imgInfo.bgHeight\n      else # if image height is bigger than canvas height\n        if imageBox.top > windowBox.top # force overflow top\n          @imgInfo.bgPosY = windowBox.top\n        else if imageBox.down < windowBox.down\n          # force overflow down\n          @imgInfo.bgPosY = windowBox.down - @imgInfo.bgHeight\n\n      @domImage.style.backgroundSize = \"#{@imgInfo.bgWidth}px #{@imgInfo.bgHeight}px\"\n      @domImage.style.backgroundPosition = \"#{@imgInfo.bgPosX}px #{@imgInfo.bgPosY}px\"\n\n    reset: ->\n      @imgInfo.bgWidth = @imgInfo.width\n      @imgInfo.bgHeight = @imgInfo.height\n      @imgInfo.bgPosX = @domImage.width / 2 - @imgInfo.width / 2\n      @imgInfo.bgPosY = @domImage.height / 2 - @imgInfo.height / 2\n      @updateBgStyle()\n\n    setSrcToBackground: ->\n      @domImage.style.backgroundImage = \"url('#{@domImage.src}')\"\n      @domImage.style.backgroundRepeat = 'no-repeat'\n      @canvas.width = @domImage.naturalWidth\n      @canvas.height = @domImage.naturalHeight\n      @imgInfo.cachedDataUrl = @canvas.toDataURL()\n      @domImage.src = @imgInfo.cachedDataUrl\n\n    zoom: (deltaY, propagate = false) ->\n      zoomSensibility = if __whmodules.globals['isPinched']\n      then @options.zoom * @options.pinchSensibility\n      else @options.zoom\n\n      # zoom always at the center of the image\n      offsetX = @domImage.width / 2\n      offsetY = @domImage.height / 2\n\n      # Record the offset between the bg edge and the center of the image:\n      bgCenterX = offsetX - @imgInfo.bgPosX\n      bgCenterY = offsetY - @imgInfo.bgPosY\n\n      # Use the previous offset to get the percent offset between the bg edge\n      # and the center of the image:\n      bgRatioX = bgCenterX / @imgInfo.bgWidth\n      bgRatioY = bgCenterY / @imgInfo.bgHeight\n\n      # Update the bg size:\n      if deltaY < 0\n        if @options.maxZoom is -1 or\n        ((@imgInfo.bgWidth + @imgInfo.bgWidth * zoomSensibility) /\n        @imgInfo.width) <= @options.maxZoom\n          @imgInfo.bgWidth += @imgInfo.bgWidth * zoomSensibility\n          @imgInfo.bgHeight += @imgInfo.bgHeight * zoomSensibility\n      else\n        @imgInfo.bgWidth -= @imgInfo.bgWidth * zoomSensibility\n        @imgInfo.bgHeight -= @imgInfo.bgHeight * zoomSensibility\n\n      # Take the percent offset and apply it to the new size:\n      @imgInfo.bgPosX = offsetX - (@imgInfo.bgWidth * bgRatioX)\n      @imgInfo.bgPosY = offsetY - (@imgInfo.bgHeight * bgRatioY)\n\n      if propagate\n        if deltaY < 0 then @wzEvents.trigger 'wheelzoom.in', {\n          zoom: @imgInfo.bgWidth / @imgInfo.width,\n          bgPosX: @imgInfo.bgPosX,\n          bgPosY: @imgInfo.bgPosY\n        }\n        else @wzEvents.trigger 'wheelzoom.out', {\n          zoom: @imgInfo.bgWidth / @imgInfo.width,\n          bgPosX: @imgInfo.bgPosX,\n          bgPosY: @imgInfo.bgPosY\n        }\n\n      # Prevent zooming out beyond the starting size\n      if @imgInfo.bgWidth <= @imgInfo.width or @imgInfo.bgHeight <= @imgInfo.height\n        @wzEvents.trigger 'wheelzoom.reset'\n      else @updateBgStyle()\n\n    drag: (x, y) ->\n      @imgInfo.bgPosX = x\n      @imgInfo.bgPosY = y\n      @updateBgStyle()\n\n    destroy: ->\n      @domImage.style = @domImage.getAttribute('style')\n      @domImage.src = @domImage.getAttribute('src')\n      @wzImageApi.destroy()\n      delete @wzImageApi\n","__whmodules.addClass 'ImageApi',\n\n  class ImageApi\n\n    constructor: (_whzImage) ->\n      @whzImage = _whzImage\n      @domImage = _whzImage.domImage\n      @registerApiMethods()\n    \n    registerApiMethods: ->\n      @domImage.doZoomIn = @doZoomIn.bind @\n      @domImage.doZoomOut = @doZoomOut.bind @\n      @domImage.doDrag = @doDrag.bind @\n    \n    destroy: ->\n      delete @domImage.wz\n      \n    doZoomIn: -> @whzImage.zoom -100, false\n    doZoomOut: -> @whzImage.zoom 100, false\n    doDrag: (x, y) -> @whzImage.drag x, y\n","__whmodules.addClass 'Wheelzoom',\n\n  class Wheelzoom\n\n    # private static\n    wheelzoomSingleton = null\n    wzImgs = []\n    globals = __whmodules.globals\n\n    # public methods\n    constructor: (elements, options) ->\n      @init(elements, options)\n      if wheelzoomSingleton is not null then return wheelzoomSingleton\n      else return wheelzoomSingleton = @\n\n    init: (elements, options) ->\n      # Do nothing in IE8\n      if typeof window.getComputedStyle != 'function' then return elements\n      if elements and elements.length then addImage(element, options) for element in elements\n      else if (elements && elements.nodeName) then addImage(elements, options)\n      return elements\n\n    # private methods\n    addImage = (img, options) ->\n      if !img or !img.nodeName or img.nodeName != 'IMG' then return\n\n      wzImg = new Image img, parseOptions(options)\n      wzImgs.push wzImg\n\n    parseOptions = (options) ->\n      out = {}\n      options = options or {}\n      Object.keys(globals['defaults']).forEach (key) ->\n        out[key] = if typeof options[key] != 'undefined' then options[key]\n        else globals['defaults'][key]\n      return out\n\n    # public static methods\n    @images = -> wzImgs\n    @resetAll = -> wzImgs.forEach (wzImg) -> wzImg.reset()\n    @destroyAll = ->\n      while wzImgs.length\n        wzImgs[0].destroy()\n        wzImgs.splice(0, 1)\n","__whmodules.windowRegister ->\n  CustomEvent = (event, params) ->\n    params = params || { bubbles: false, cancelable: false, detail: undefined }\n    evt = document.createEvent 'CustomEvent'\n    evt.initCustomEvent event, params.bubbles, params.cancelable, params.detail\n    return evt\n\n  CustomEvent.prototype = window.Event.prototype\n  window.CustomEvent = CustomEvent","# create cross browser triggerEvent function\n__whmodules.windowRegister ->\n  window.triggerEvent = (target, eventName, params) ->\n    if params\n      e = new CustomEvent eventName, { detail: params }\n    else\n      try\n        e = new Event(eventName)\n      catch err\n        e = new CustomEvent(eventName)\n    return target.dispatchEvent(e, params)\n","(-> __whmodules.init())()"]}