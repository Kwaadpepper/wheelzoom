{"version":3,"sources":["__header.coffee","init.js","__modules.coffee","fullscreenHandler.coffee","wheelzoom.coffee","classes/Events.coffee","classes/Image.coffee","classes/ImageApi.coffee","classes/Wheelzoom.coffee","windowGlobals/customEvent.coffee","windowGlobals/triggerEvent.coffee","init.coffee"],"names":["Events","Image","ImageApi","Wheelzoom","__whmodules","globals","modules","add","_module","push","bind","addClass","_className","_class","windowRegister","_globalElement","init","i","len","ref","results","length","call","fullscreenchangeHandler","window","wheelzoom","resetAll","document","addEventListener","staticMethods","defaults","zoom","pinchSensibility","maxZoom","isPinched","elements","options","staticMethod","whz","_whzImage","initEvents","on","off","trigger","onwheel","drag","draggable","removeDrag","destroy","previousEvent","whzImage","domImage","imgInfo","_events","reset","forEach","evt","element","removeEventListener","eventName","zoomTimer","triggerEvent","x","bgPosX","initBgPosX","y","bgPosY","initBgPosY","clearTimeout","setTimeout","e","deltaY","preventDefault","wheelDelta","deltaPinch","dist","prevDist","xShift","yShift","type","touches","pageX","pageY","Math","sqrt","pow","updateBgStyle","_domImage","_options","t","isEqualTo","load","setSrcToBackground","canvas","createElement","wzEvents","wzImageApi","setInterval","img","complete","clearInterval","computedStyle","height","width","src","cachedDataUrl","getComputedStyle","parseInt","bgWidth","bgHeight","style","backgroundSize","backgroundPosition","cycl","imageBox","windowBox","left","right","top","down","size","aSide","bSide","bgPos","bgSize","backgroundImage","backgroundRepeat","naturalWidth","naturalHeight","toDataURL","propagate","bgCenterX","bgCenterY","bgRatioX","bgRatioY","offsetX","offsetY","zoomSensibility","getAttribute","registerApiMethods","doZoomIn","doZoomOut","doDrag","wz","addImage","parseOptions","wheelzoomSingleton","wzImgs","nodeName","wzImg","splice","out","Object","keys","key","CustomEvent","event","params","bubbles","cancelable","detail","createEvent","initCustomEvent","prototype","Event","target","err","error","dispatchEvent"],"mappings":"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","file":"wheelzoom.js","sourcesContent":["##! Wheelzoom 1.3.0\n#  license: MIT\n#  https://kwaadpepper.github.io/wheelzoom/\n#\n","(function() {\n  //#! Wheelzoom 1.3.0\n  //  license: MIT\n  //  https://kwaadpepper.github.io/wheelzoom/\n\n  var Events, Image, ImageApi, Wheelzoom, __whmodules;\n\n  __whmodules = {\n    globals: {},\n    modules: [],\n    add: function(_module) {\n      return __whmodules.modules.push(_module.bind(__whmodules.globals));\n    },\n    addClass: function(_className, _class) {\n      return __whmodules.globals[_className] = _class.bind(__whmodules.globals);\n    },\n    windowRegister: function(_globalElement) {\n      return _globalElement();\n    },\n    init: function() {\n      var _module, i, len, ref, results;\n      ref = __whmodules.modules;\n      results = [];\n      for (i = 0, len = ref.length; i < len; i++) {\n        _module = ref[i];\n        results.push(_module.call(__whmodules.globals));\n      }\n      return results;\n    }\n  };\n\n  __whmodules.add(function() {\n    var fullscreenchangeHandler;\n    fullscreenchangeHandler = function() {\n      return window.wheelzoom.resetAll();\n    };\n    if (document.addEventListener) {\n      document.addEventListener('fullscreenchange', fullscreenchangeHandler, false);\n      document.addEventListener('mozfullscreenchange', fullscreenchangeHandler, false);\n      document.addEventListener('MSFullscreenChange', fullscreenchangeHandler, false);\n      return document.addEventListener('webkitfullscreenchange', fullscreenchangeHandler, false);\n    }\n  });\n\n  __whmodules.add(function() {\n    var staticMethods;\n    this.defaults = {\n      zoom: 0.10,\n      pinchSensibility: 0.3,\n      maxZoom: -1\n    };\n    this.isPinched = false;\n    staticMethods = ['images', 'resetAll', 'destroyAll'];\n    return window.wheelzoom = function(elements, options) {\n      var i, len, staticMethod, whz;\n      whz = new Wheelzoom(elements, options);\n      for (i = 0, len = staticMethods.length; i < len; i++) {\n        staticMethod = staticMethods[i];\n        window.wheelzoom[staticMethod] = Wheelzoom[staticMethod];\n      }\n      return whz;\n    };\n  });\n\n  __whmodules.addClass('Events', Events = class Events {\n    constructor(_whzImage) {\n      this.initEvents = this.initEvents.bind(this);\n      this.on = this.on.bind(this);\n      this.off = this.off.bind(this);\n      this.trigger = this.trigger.bind(this);\n      this.onwheel = this.onwheel.bind(this);\n      this.drag = this.drag.bind(this);\n      this.draggable = this.draggable.bind(this);\n      this.removeDrag = this.removeDrag.bind(this);\n      this.destroy = this.destroy.bind(this);\n      // Instance variables\n      this.previousEvent = null;\n      this.whzImage = _whzImage;\n      this.domImage = _whzImage.domImage;\n      this.imgInfo = _whzImage.imgInfo;\n      this._events = {};\n      // Init\n      this.initEvents();\n    }\n\n    initEvents() {\n      this._events['wheelzoom.reset'] = (() => {\n        return this.whzImage.reset();\n      }).bind(this);\n      this._events['wheelzoom.destroy'] = this.destroy.bind(this);\n      this._events['wheel'] = this.onwheel.bind(this);\n      this._events['mousedown'] = this.draggable.bind(this);\n      this._events['touchstart'] = this.draggable.bind(this);\n      this._events['touchmove'] = this.drag.bind(this);\n      this._events['touchend'] = this.removeDrag.bind(this);\n      this._events['mousemove'] = this.drag.bind(this);\n      this._events['mouseup'] = this.removeDrag.bind(this);\n      return ['wheelzoom.reset', 'wheelzoom.destroy', 'wheel', 'mousedown', 'touchstart'].forEach(((evt) => {\n        return this.on(this.domImage, evt);\n      }).bind(this));\n    }\n\n    on(element, evt) {\n      return element.addEventListener(evt, this._events[evt]);\n    }\n\n    off(element, evt) {\n      return element.removeEventListener(evt, this._events[evt]);\n    }\n\n    trigger(eventName, options) {\n      var zoomTimer;\n      zoomTimer = null;\n      options = options || {};\n      switch (eventName) {\n        case 'wheelzoom.dragend':\n          window.triggerEvent(this.domImage, eventName, {\n            x: this.imgInfo.bgPosX - this.imgInfo.initBgPosX,\n            y: this.imgInfo.bgPosY - this.imgInfo.initBgPosY\n          });\n          break;\n        case 'wheelzoom.dragstart':\n        case 'wheelzoom.reset':\n        case 'wheelzoom.drag':\n          window.triggerEvent(this.domImage, eventName, options);\n          break;\n        case 'wheelzoom.out':\n        case 'wheelzoom.in':\n          // setTimeout to handle lot of events fired\n          clearTimeout(zoomTimer);\n          zoomTimer = setTimeout(((eventName, options) => {\n            return window.triggerEvent(this.domImage, eventName, options);\n          }).bind(this, eventName, options), 10);\n          break;\n      }\n    }\n\n    onwheel(e) {\n      var deltaY;\n      e.preventDefault();\n      deltaY = 0;\n      // FireFox 17+ (IE9+, Chrome 31+?)\n      if (e.deltaY) {\n        deltaY = e.deltaY;\n      } else if (e.wheelDelta) {\n        deltaY = -e.wheelDelta;\n      }\n      return this.whzImage.zoom(deltaY, true);\n    }\n\n    drag(e) {\n      var deltaPinch, dist, prevDist, x, xShift, y, yShift;\n      e.preventDefault();\n      switch (e.type) {\n        case 'touchstart':\n        case 'touchmove':\n          __whmodules.globals['isPinched'] = e.touches.length === 2;\n          xShift = e.touches[0].pageX;\n          yShift = e.touches[0].pageY;\n          break;\n        default:\n          xShift = e.pageX;\n          yShift = e.pageY;\n      }\n      switch (this.previousEvent.type) {\n        case 'touchstart':\n        case 'touchmove':\n          __whmodules.globals['isPinched'] = this.previousEvent.touches.length === 2;\n          xShift -= this.previousEvent.touches[0].pageX;\n          yShift -= this.previousEvent.touches[0].pageY;\n          break;\n        default:\n          xShift -= this.previousEvent.pageX;\n          yShift -= this.previousEvent.pageY;\n      }\n      if (__whmodules.globals['isPinched']) {\n        dist = Math.sqrt(Math.pow(e.touches[1].pageX - e.touches[0].pageX, 2) + Math.pow(e.touches[1].pageY - e.touches[0].pageY, 2));\n        prevDist = Math.sqrt(Math.pow(this.previousEvent.touches[1].pageX - this.previousEvent.touches[0].pageX, 2) + Math.pow(this.previousEvent.touches[1].pageY - this.previousEvent.touches[0].pageY, 2));\n        deltaPinch = prevDist - dist;\n        this.whzImage.zoom(deltaPinch, true);\n        return;\n      }\n      x = this.imgInfo.bgPosX + xShift;\n      y = this.imgInfo.bgPosY + yShift;\n      this.whzImage.drag(x, y);\n      this.trigger('wheelzoom.drag', {\n        bgPosX: this.imgInfo.bgPosX,\n        bgPosY: this.imgInfo.bgPosY,\n        xShift: xShift,\n        yShift: yShift\n      });\n      this.previousEvent = e;\n      return this.whzImage.updateBgStyle();\n    }\n\n    draggable(e) {\n      e.preventDefault();\n      this.trigger('wheelzoom.dragend');\n      this.previousEvent = e;\n      if (e.type === 'touchstart') {\n        this.on(document, 'touchmove');\n        return this.on(document, 'touchend');\n      } else {\n        this.on(document, 'mousemove');\n        return this.on(document, 'mouseup');\n      }\n    }\n\n    removeDrag(e) {\n      e.preventDefault();\n      this.trigger('wheelzoom.dragend');\n      this.off(document, 'touchmove');\n      this.off(document, 'touchend');\n      this.off(document, 'mousemove');\n      return this.off(document, 'mouseup');\n    }\n\n    destroy(e) {\n      this.whzImage.destroy();\n      this.off(this.domImage, 'wheelzoom.reset');\n      this.off(this.domImage, 'wheelzoom.destroy');\n      this.off(this.domImage, 'wheel');\n      this.off(this.domImage, 'mousedown');\n      this.off(this.domImage, 'mouseup');\n      this.off(this.domImage, 'mousemove');\n      this.off(this.domImage, 'touchstart');\n      this.off(this.domImage, 'touchleave');\n      this.off(this.domImage, 'touchmove');\n      delete this.previousEvent;\n      delete this.whzImage;\n      delete this.domImage;\n      delete this.imgInfo;\n      return delete this._events;\n    }\n\n  });\n\n  __whmodules.addClass('Image', Image = class Image {\n    constructor(_domImage, _options) {\n      var t;\n      this.isEqualTo = this.isEqualTo.bind(this);\n      this.load = this.load.bind(this);\n      this.updateBgStyle = this.updateBgStyle.bind(this);\n      this.reset = this.reset.bind(this);\n      this.setSrcToBackground = this.setSrcToBackground.bind(this);\n      this.zoom = this.zoom.bind(this);\n      this.drag = this.drag.bind(this);\n      this.destroy = this.destroy.bind(this);\n      // Instance variables\n      this.domImage = _domImage;\n      this.canvas = document.createElement('canvas');\n      this.options = _options || {};\n      this.imgInfo = {};\n      this.wzEvents = new Events(this);\n      this.wzImageApi = new ImageApi(this);\n      t = setInterval((function(img, load) {\n        if (img.complete) {\n          load();\n          return clearInterval(t);\n        }\n      }).bind(null, this.domImage, this.load.bind(this)), 100);\n    }\n\n    isEqualTo(img) {\n      return img === this.domImage;\n    }\n\n    load() {\n      var bgPosX, bgPosY, computedStyle, height, width;\n      if (this.domImage.src === this.imgInfo.cachedDataUrl) {\n        return;\n      }\n      computedStyle = window.getComputedStyle(this.domImage, null);\n      width = parseInt(computedStyle.width, 10);\n      height = parseInt(computedStyle.height, 10);\n      bgPosX = (this.domImage.width - width) / 2;\n      bgPosY = (this.domImage.height - height) / 2;\n      this.imgInfo.width = width;\n      this.imgInfo.height = height;\n      this.imgInfo.bgWidth = width;\n      this.imgInfo.bgHeight = height;\n      this.imgInfo.initBgPosX = bgPosX;\n      this.imgInfo.initBgPosY = bgPosY;\n      this.imgInfo.bgPosX = bgPosX;\n      this.imgInfo.bgPosY = bgPosY;\n      this.setSrcToBackground(this.domImage);\n      this.domImage.style.backgroundSize = this.imgInfo.width + 'px ' + this.imgInfo.height + 'px';\n      return this.domImage.style.backgroundPosition = this.imgInfo.bgPosX + 'px ' + this.imgInfo.bgPosY + 'px';\n    }\n\n    updateBgStyle() {\n      var cycl, imageBox, windowBox;\n      windowBox = {\n        left: 0,\n        right: this.domImage.width,\n        top: 0,\n        down: this.domImage.height,\n        width: this.domImage.width,\n        height: this.domImage.height\n      };\n      imageBox = {\n        left: this.imgInfo.bgPosX,\n        right: this.imgInfo.bgPosX + this.imgInfo.bgWidth,\n        top: this.imgInfo.bgPosY,\n        down: this.imgInfo.bgPosY + this.imgInfo.bgHeight,\n        width: this.imgInfo.bgWidth,\n        height: this.imgInfo.bgHeight\n      };\n      cycl = (size, aSide, bSide, bgPos, bgSize) => {\n        // If image size is smaller than canvas size\n        if (imageBox[size] < windowBox[size]) {\n          if (imageBox[aSide] < windowBox[aSide]) {\n            // do not overflow left\n            this.imgInfo[bgPos] = windowBox[aSide];\n          }\n          if (imageBox[bSide] > windowBox[bSide]) {\n            // do not overflow right\n            return this.imgInfo[bgPos] = windowBox[bSide] - this.imgInfo[bgSize];\n          }\n        } else {\n          // force overflow aSide\n          if (imageBox[aSide] > windowBox[aSide]) {\n            this.imgInfo[bgPos] = windowBox[aSide];\n          }\n          if (imageBox[bSide] < windowBox[bSide]) {\n            // force overflow bSide\n            return this.imgInfo[bgPos] = windowBox[bSide] - this.imgInfo[bgSize];\n          }\n        }\n      };\n      cycl('width', 'left', 'right', 'bgPosX', 'bgWidth');\n      cycl('height', 'top', 'down', 'bgPosY', 'bgHeight');\n      this.domImage.style.backgroundSize = `${this.imgInfo.bgWidth}px ${this.imgInfo.bgHeight}px`;\n      return this.domImage.style.backgroundPosition = `${this.imgInfo.bgPosX}px ${this.imgInfo.bgPosY}px`;\n    }\n\n    reset() {\n      this.imgInfo.bgWidth = this.imgInfo.width;\n      this.imgInfo.bgHeight = this.imgInfo.height;\n      this.imgInfo.bgPosX = this.domImage.width / 2 - this.imgInfo.width / 2;\n      this.imgInfo.bgPosY = this.domImage.height / 2 - this.imgInfo.height / 2;\n      return this.updateBgStyle();\n    }\n\n    setSrcToBackground() {\n      this.domImage.style.backgroundImage = `url('${this.domImage.src}')`;\n      this.domImage.style.backgroundRepeat = 'no-repeat';\n      this.canvas.width = this.domImage.naturalWidth;\n      this.canvas.height = this.domImage.naturalHeight;\n      this.imgInfo.cachedDataUrl = this.canvas.toDataURL();\n      return this.domImage.src = this.imgInfo.cachedDataUrl;\n    }\n\n    zoom(deltaY, propagate = false) {\n      var bgCenterX, bgCenterY, bgRatioX, bgRatioY, offsetX, offsetY, zoomSensibility;\n      zoomSensibility = __whmodules.globals['isPinched'] ? this.options.zoom * this.options.pinchSensibility : this.options.zoom;\n      // zoom always at the center of the image\n      offsetX = this.domImage.width / 2;\n      offsetY = this.domImage.height / 2;\n      // Record the offset between the bg edge and the center of the image:\n      bgCenterX = offsetX - this.imgInfo.bgPosX;\n      bgCenterY = offsetY - this.imgInfo.bgPosY;\n      // Use the previous offset to get the percent offset between the bg edge\n      // and the center of the image:\n      bgRatioX = bgCenterX / this.imgInfo.bgWidth;\n      bgRatioY = bgCenterY / this.imgInfo.bgHeight;\n      // Update the bg size:\n      if (deltaY < 0) {\n        if (this.options.maxZoom === -1 || ((this.imgInfo.bgWidth + this.imgInfo.bgWidth * zoomSensibility) / this.imgInfo.width) <= this.options.maxZoom) {\n          this.imgInfo.bgWidth += this.imgInfo.bgWidth * zoomSensibility;\n          this.imgInfo.bgHeight += this.imgInfo.bgHeight * zoomSensibility;\n        }\n      } else {\n        this.imgInfo.bgWidth -= this.imgInfo.bgWidth * zoomSensibility;\n        this.imgInfo.bgHeight -= this.imgInfo.bgHeight * zoomSensibility;\n      }\n      // Take the percent offset and apply it to the new size:\n      this.imgInfo.bgPosX = offsetX - (this.imgInfo.bgWidth * bgRatioX);\n      this.imgInfo.bgPosY = offsetY - (this.imgInfo.bgHeight * bgRatioY);\n      if (propagate) {\n        if (deltaY < 0) {\n          this.wzEvents.trigger('wheelzoom.in', {\n            zoom: this.imgInfo.bgWidth / this.imgInfo.width,\n            bgPosX: this.imgInfo.bgPosX,\n            bgPosY: this.imgInfo.bgPosY\n          });\n        } else {\n          this.wzEvents.trigger('wheelzoom.out', {\n            zoom: this.imgInfo.bgWidth / this.imgInfo.width,\n            bgPosX: this.imgInfo.bgPosX,\n            bgPosY: this.imgInfo.bgPosY\n          });\n        }\n      }\n      // Prevent zooming out beyond the starting size\n      if (this.imgInfo.bgWidth <= this.imgInfo.width || this.imgInfo.bgHeight <= this.imgInfo.height) {\n        return this.wzEvents.trigger('wheelzoom.reset');\n      } else {\n        return this.updateBgStyle();\n      }\n    }\n\n    drag(x, y) {\n      this.imgInfo.bgPosX = x;\n      this.imgInfo.bgPosY = y;\n      return this.updateBgStyle();\n    }\n\n    destroy() {\n      this.domImage.style = this.domImage.getAttribute('style');\n      this.domImage.src = this.domImage.getAttribute('src');\n      this.wzImageApi.destroy();\n      return delete this.wzImageApi;\n    }\n\n  });\n\n  __whmodules.addClass('ImageApi', ImageApi = class ImageApi {\n    constructor(_whzImage) {\n      this.registerApiMethods = this.registerApiMethods.bind(this);\n      this.destroy = this.destroy.bind(this);\n      this.doZoomIn = this.doZoomIn.bind(this);\n      this.doZoomOut = this.doZoomOut.bind(this);\n      this.doDrag = this.doDrag.bind(this);\n      this.whzImage = _whzImage;\n      this.domImage = _whzImage.domImage;\n      this.registerApiMethods();\n    }\n\n    registerApiMethods() {\n      this.domImage.doZoomIn = this.doZoomIn.bind(this);\n      this.domImage.doZoomOut = this.doZoomOut.bind(this);\n      return this.domImage.doDrag = this.doDrag.bind(this);\n    }\n\n    destroy() {\n      return delete this.domImage.wz;\n    }\n\n    doZoomIn() {\n      return this.whzImage.zoom(-100, false);\n    }\n\n    doZoomOut() {\n      return this.whzImage.zoom(100, false);\n    }\n\n    doDrag(x, y) {\n      return this.whzImage.drag(x, y);\n    }\n\n  });\n\n  __whmodules.addClass('Wheelzoom', Wheelzoom = (function() {\n    var addImage, globals, parseOptions, wheelzoomSingleton, wzImgs;\n\n    class Wheelzoom {\n      // public methods\n      constructor(elements, options) {\n        this.init(elements, options);\n        if (wheelzoomSingleton === !null) {\n          return wheelzoomSingleton;\n        } else {\n          return wheelzoomSingleton = this;\n        }\n      }\n\n      init(elements, options) {\n        var element, i, len;\n        // Do nothing in IE8\n        if (typeof window.getComputedStyle !== 'function') {\n          return elements;\n        }\n        if (elements && elements.length) {\n          for (i = 0, len = elements.length; i < len; i++) {\n            element = elements[i];\n            addImage(element, options);\n          }\n        } else if (elements && elements.nodeName) {\n          addImage(elements, options);\n        }\n        return elements;\n      }\n\n      // public static methods\n      static images() {\n        return wzImgs;\n      }\n\n      static resetAll() {\n        return wzImgs.forEach(function(wzImg) {\n          return wzImg.reset();\n        });\n      }\n\n      static destroyAll() {\n        var results;\n        results = [];\n        while (wzImgs.length) {\n          wzImgs[0].destroy();\n          results.push(wzImgs.splice(0, 1));\n        }\n        return results;\n      }\n\n    };\n\n    // private static\n    wheelzoomSingleton = null;\n\n    wzImgs = [];\n\n    globals = __whmodules.globals;\n\n    // private methods\n    addImage = function(img, options) {\n      var wzImg;\n      if (!img || !img.nodeName || img.nodeName !== 'IMG') {\n        return;\n      }\n      wzImg = new Image(img, parseOptions(options));\n      return wzImgs.push(wzImg);\n    };\n\n    parseOptions = function(options) {\n      var out;\n      out = {};\n      options = options || {};\n      Object.keys(globals['defaults']).forEach(function(key) {\n        return out[key] = typeof options[key] !== 'undefined' ? options[key] : globals['defaults'][key];\n      });\n      return out;\n    };\n\n    return Wheelzoom;\n\n  }).call(this));\n\n  __whmodules.windowRegister(function() {\n    var CustomEvent;\n    CustomEvent = function(event, params) {\n      var evt;\n      params = params || {\n        bubbles: false,\n        cancelable: false,\n        detail: void 0\n      };\n      evt = document.createEvent('CustomEvent');\n      evt.initCustomEvent(event, params.bubbles, params.cancelable, params.detail);\n      return evt;\n    };\n    CustomEvent.prototype = window.Event.prototype;\n    return window.CustomEvent = CustomEvent;\n  });\n\n  // create cross browser triggerEvent function\n  __whmodules.windowRegister(function() {\n    return window.triggerEvent = function(target, eventName, params) {\n      var e, err;\n      if (params) {\n        e = new CustomEvent(eventName, {\n          detail: params\n        });\n      } else {\n        try {\n          e = new Event(eventName);\n        } catch (error) {\n          err = error;\n          e = new CustomEvent(eventName);\n        }\n      }\n      return target.dispatchEvent(e, params);\n    };\n  });\n\n  (function() {\n    return __whmodules.init();\n  })();\n\n}).call(this);\n","__whmodules = {\n  globals: {},\n  modules: [],\n  add: (_module) -> __whmodules.modules.push _module.bind __whmodules.globals\n  addClass: (_className, _class) ->\n    __whmodules.globals[_className] = _class.bind __whmodules.globals\n  windowRegister: (_globalElement) -> _globalElement()\n  init: -> _module.call(__whmodules.globals) for _module in __whmodules.modules\n}\n","__whmodules.add ->\n  fullscreenchangeHandler = -> window.wheelzoom.resetAll()\n\n  if document.addEventListener\n    document.addEventListener 'fullscreenchange', fullscreenchangeHandler, false\n    document.addEventListener 'mozfullscreenchange', fullscreenchangeHandler, false\n    document.addEventListener 'MSFullscreenChange', fullscreenchangeHandler, false\n    document.addEventListener 'webkitfullscreenchange', fullscreenchangeHandler, false\n","__whmodules.add ->\n\n  @defaults = {\n    zoom: 0.10,\n    pinchSensibility: 0.3,\n    maxZoom: -1\n  }\n  @isPinched = false\n\n  staticMethods = [\n    'images', 'resetAll', 'destroyAll'\n  ]\n\n  window.wheelzoom = (elements, options) ->\n    whz = new Wheelzoom(elements, options)\n    for staticMethod in staticMethods\n      window.wheelzoom[staticMethod] = Wheelzoom[staticMethod]\n    return whz\n","__whmodules.addClass 'Events',\n\n  class Events\n\n    constructor: (_whzImage) ->\n\n      # Instance variables\n      @previousEvent = null\n      @whzImage = _whzImage\n      @domImage = _whzImage.domImage\n      @imgInfo = _whzImage.imgInfo\n      @_events = {}\n\n      # Init\n      @initEvents()\n\n    initEvents: =>\n      @_events['wheelzoom.reset'] = (=> @whzImage.reset()).bind @\n      @_events['wheelzoom.destroy'] = @destroy.bind @\n      @_events['wheel'] = @onwheel.bind @\n      @_events['mousedown'] = @draggable.bind @\n      @_events['touchstart'] = @draggable.bind @\n      @_events['touchmove'] = @drag.bind @\n      @_events['touchend'] = @removeDrag.bind @\n      @_events['mousemove'] = @drag.bind @\n      @_events['mouseup'] = @removeDrag.bind @\n\n      [ 'wheelzoom.reset',\n        'wheelzoom.destroy',\n        'wheel',\n        'mousedown',\n        'touchstart'\n      ].forEach  ((evt) => @on @domImage, evt).bind @\n\n    on: (element, evt) => element.addEventListener evt, @_events[evt]\n    off: (element, evt) => element.removeEventListener evt, @_events[evt]\n    trigger: (eventName, options) =>\n      zoomTimer = null\n      options = options or {}\n      switch eventName\n        when 'wheelzoom.dragend'\n          window.triggerEvent @domImage, eventName, {\n            x: @imgInfo.bgPosX - @imgInfo.initBgPosX,\n            y: @imgInfo.bgPosY - @imgInfo.initBgPosY\n          }\n          break\n        when 'wheelzoom.dragstart', 'wheelzoom.reset', 'wheelzoom.drag'\n          window.triggerEvent @domImage, eventName, options\n          break\n        when 'wheelzoom.out', 'wheelzoom.in'\n          # setTimeout to handle lot of events fired\n          clearTimeout zoomTimer\n          zoomTimer = setTimeout ((eventName, options) =>\n            window.triggerEvent @domImage, eventName, options\n          ).bind(@, eventName, options), 10\n          break\n\n    onwheel: (e) =>\n      e.preventDefault()\n\n      deltaY = 0\n\n      # FireFox 17+ (IE9+, Chrome 31+?)\n      if e.deltaY then deltaY = e.deltaY\n      else if e.wheelDelta then deltaY = -e.wheelDelta\n\n      @whzImage.zoom deltaY, true\n\n    drag: (e) =>\n      e.preventDefault()\n\n      switch e.type\n        when 'touchstart'\n        , 'touchmove'\n          __whmodules.globals['isPinched'] = e.touches.length == 2\n          xShift = e.touches[0].pageX\n          yShift = e.touches[0].pageY\n          break\n        else\n          xShift = e.pageX\n          yShift = e.pageY\n\n      switch @previousEvent.type\n        when 'touchstart'\n        , 'touchmove'\n          __whmodules.globals['isPinched'] = @previousEvent.touches.length == 2\n          xShift -= @previousEvent.touches[0].pageX\n          yShift -= @previousEvent.touches[0].pageY\n          break\n        else\n          xShift -= @previousEvent.pageX\n          yShift -= @previousEvent.pageY\n\n      if __whmodules.globals['isPinched'] # Zoom if pinch\n        dist = Math.sqrt(\n          Math.pow(e.touches[1].pageX - e.touches[0].pageX, 2) +\n          Math.pow(e.touches[1].pageY - e.touches[0].pageY, 2))\n        prevDist = Math.sqrt(\n          Math.pow(@previousEvent.touches[1].pageX - @previousEvent.touches[0].pageX, 2) +\n          Math.pow(@previousEvent.touches[1].pageY - @previousEvent.touches[0].pageY, 2))\n        deltaPinch = prevDist - dist\n\n        @whzImage.zoom deltaPinch, true\n        return\n\n      x = @imgInfo.bgPosX + xShift\n      y = @imgInfo.bgPosY + yShift\n\n      @whzImage.drag x, y\n\n      @trigger 'wheelzoom.drag', {\n        bgPosX: @imgInfo.bgPosX,\n        bgPosY: @imgInfo.bgPosY,\n        xShift: xShift,\n        yShift: yShift\n      }\n\n      @previousEvent = e\n      @whzImage.updateBgStyle()\n\n    draggable: (e) =>\n      e.preventDefault()\n      @trigger 'wheelzoom.dragend'\n      @previousEvent = e\n      if e.type == 'touchstart'\n        @on document, 'touchmove'\n        @on document, 'touchend'\n      else\n        @on document, 'mousemove'\n        @on document, 'mouseup'\n\n    removeDrag: (e) =>\n      e.preventDefault()\n      @trigger 'wheelzoom.dragend'\n      @off document, 'touchmove'\n      @off document, 'touchend'\n      @off document, 'mousemove'\n      @off document, 'mouseup'\n\n    destroy: (e) =>\n      @whzImage.destroy()\n      @off @domImage, 'wheelzoom.reset'\n      @off @domImage, 'wheelzoom.destroy'\n      @off @domImage, 'wheel'\n      @off @domImage, 'mousedown'\n      @off @domImage, 'mouseup'\n      @off @domImage, 'mousemove'\n      @off @domImage, 'touchstart'\n      @off @domImage, 'touchleave'\n      @off @domImage, 'touchmove'\n\n      delete @previousEvent\n      delete @whzImage\n      delete @domImage\n      delete @imgInfo\n      delete @_events\n","__whmodules.addClass 'Image',\n\n  class Image\n\n    constructor: (_domImage, _options) ->\n\n      # Instance variables\n      @domImage = _domImage\n      @canvas = document.createElement('canvas')\n      @options = _options or {}\n      @imgInfo = {}\n      @wzEvents = new Events(@)\n      @wzImageApi = new ImageApi(@)\n\n      t = setInterval ((img, load) ->\n        if img.complete\n          load()\n          clearInterval(t)\n      ).bind(null, @domImage, @load.bind(@)), 100\n\n    isEqualTo: (img) => img == @domImage\n\n    load: =>\n      if @domImage.src == @imgInfo.cachedDataUrl then return\n\n      computedStyle = window.getComputedStyle(@domImage, null)\n\n      width = parseInt(computedStyle.width, 10)\n      height = parseInt(computedStyle.height, 10)\n      bgPosX = (@domImage.width - width) / 2\n      bgPosY = (@domImage.height - height) / 2\n\n      @imgInfo.width = width\n      @imgInfo.height = height\n      @imgInfo.bgWidth = width\n      @imgInfo.bgHeight = height\n      @imgInfo.initBgPosX = bgPosX\n      @imgInfo.initBgPosY = bgPosY\n      @imgInfo.bgPosX = bgPosX\n      @imgInfo.bgPosY = bgPosY\n\n\n      @setSrcToBackground(@domImage)\n\n      @domImage.style.backgroundSize = @imgInfo.width + 'px ' + @imgInfo.height + 'px'\n      @domImage.style.backgroundPosition = @imgInfo.bgPosX + 'px ' + @imgInfo.bgPosY + 'px'\n\n    updateBgStyle: =>\n      windowBox = {\n        left: 0,\n        right: @domImage.width,\n        top: 0,\n        down: @domImage.height,\n        width: @domImage.width,\n        height: @domImage.height\n      }\n\n      imageBox = {\n        left: @imgInfo.bgPosX,\n        right: @imgInfo.bgPosX + @imgInfo.bgWidth,\n        top: @imgInfo.bgPosY,\n        down: @imgInfo.bgPosY + @imgInfo.bgHeight,\n        width: @imgInfo.bgWidth,\n        height: @imgInfo.bgHeight\n      }\n\n      cycl = (size, aSide, bSide, bgPos, bgSize) =>\n        # If image size is smaller than canvas size\n        if imageBox[size] < windowBox[size]\n          if imageBox[aSide] < windowBox[aSide]\n            # do not overflow left\n            @imgInfo[bgPos] = windowBox[aSide]\n          if imageBox[bSide] > windowBox[bSide]\n            # do not overflow right\n            @imgInfo[bgPos] = windowBox[bSide] - @imgInfo[bgSize]\n        else # if image size is bigger than canvas size\n          # force overflow aSide\n          if imageBox[aSide] > windowBox[aSide]\n            @imgInfo[bgPos] = windowBox[aSide]\n          if imageBox[bSide] < windowBox[bSide]\n            # force overflow bSide\n            @imgInfo[bgPos] = windowBox[bSide] - @imgInfo[bgSize]\n\n      cycl('width', 'left', 'right', 'bgPosX', 'bgWidth')\n      cycl('height', 'top', 'down', 'bgPosY', 'bgHeight')\n\n      @domImage.style.backgroundSize = \"#{@imgInfo.bgWidth}px #{@imgInfo.bgHeight}px\"\n      @domImage.style.backgroundPosition = \"#{@imgInfo.bgPosX}px #{@imgInfo.bgPosY}px\"\n\n    reset: =>\n      @imgInfo.bgWidth = @imgInfo.width\n      @imgInfo.bgHeight = @imgInfo.height\n      @imgInfo.bgPosX = @domImage.width / 2 - @imgInfo.width / 2\n      @imgInfo.bgPosY = @domImage.height / 2 - @imgInfo.height / 2\n      @updateBgStyle()\n\n    setSrcToBackground: =>\n      @domImage.style.backgroundImage = \"url('#{@domImage.src}')\"\n      @domImage.style.backgroundRepeat = 'no-repeat'\n      @canvas.width = @domImage.naturalWidth\n      @canvas.height = @domImage.naturalHeight\n      @imgInfo.cachedDataUrl = @canvas.toDataURL()\n      @domImage.src = @imgInfo.cachedDataUrl\n\n    zoom: (deltaY, propagate = false) =>\n      zoomSensibility = if __whmodules.globals['isPinched']\n      then @options.zoom * @options.pinchSensibility\n      else @options.zoom\n\n      # zoom always at the center of the image\n      offsetX = @domImage.width / 2\n      offsetY = @domImage.height / 2\n\n      # Record the offset between the bg edge and the center of the image:\n      bgCenterX = offsetX - @imgInfo.bgPosX\n      bgCenterY = offsetY - @imgInfo.bgPosY\n\n      # Use the previous offset to get the percent offset between the bg edge\n      # and the center of the image:\n      bgRatioX = bgCenterX / @imgInfo.bgWidth\n      bgRatioY = bgCenterY / @imgInfo.bgHeight\n\n      # Update the bg size:\n      if deltaY < 0\n        if @options.maxZoom is -1 or\n        ((@imgInfo.bgWidth + @imgInfo.bgWidth * zoomSensibility) /\n        @imgInfo.width) <= @options.maxZoom\n          @imgInfo.bgWidth += @imgInfo.bgWidth * zoomSensibility\n          @imgInfo.bgHeight += @imgInfo.bgHeight * zoomSensibility\n      else\n        @imgInfo.bgWidth -= @imgInfo.bgWidth * zoomSensibility\n        @imgInfo.bgHeight -= @imgInfo.bgHeight * zoomSensibility\n\n      # Take the percent offset and apply it to the new size:\n      @imgInfo.bgPosX = offsetX - (@imgInfo.bgWidth * bgRatioX)\n      @imgInfo.bgPosY = offsetY - (@imgInfo.bgHeight * bgRatioY)\n\n      if propagate\n        if deltaY < 0 then @wzEvents.trigger 'wheelzoom.in', {\n          zoom: @imgInfo.bgWidth / @imgInfo.width,\n          bgPosX: @imgInfo.bgPosX,\n          bgPosY: @imgInfo.bgPosY\n        }\n        else @wzEvents.trigger 'wheelzoom.out', {\n          zoom: @imgInfo.bgWidth / @imgInfo.width,\n          bgPosX: @imgInfo.bgPosX,\n          bgPosY: @imgInfo.bgPosY\n        }\n\n      # Prevent zooming out beyond the starting size\n      if @imgInfo.bgWidth <= @imgInfo.width or @imgInfo.bgHeight <= @imgInfo.height\n        @wzEvents.trigger 'wheelzoom.reset'\n      else @updateBgStyle()\n\n    drag: (x, y) =>\n      @imgInfo.bgPosX = x\n      @imgInfo.bgPosY = y\n      @updateBgStyle()\n\n    destroy: =>\n      @domImage.style = @domImage.getAttribute('style')\n      @domImage.src = @domImage.getAttribute('src')\n      @wzImageApi.destroy()\n      delete @wzImageApi\n","__whmodules.addClass 'ImageApi',\n\n  class ImageApi\n\n    constructor: (_whzImage) ->\n      @whzImage = _whzImage\n      @domImage = _whzImage.domImage\n      @registerApiMethods()\n\n    registerApiMethods: =>\n      @domImage.doZoomIn = @doZoomIn.bind @\n      @domImage.doZoomOut = @doZoomOut.bind @\n      @domImage.doDrag = @doDrag.bind @\n\n    destroy: =>\n      delete @domImage.wz\n\n    doZoomIn: => @whzImage.zoom -100, false\n    doZoomOut: => @whzImage.zoom 100, false\n    doDrag: (x, y) => @whzImage.drag x, y\n","__whmodules.addClass 'Wheelzoom',\n\n  class Wheelzoom\n\n    # private static\n    wheelzoomSingleton = null\n    wzImgs = []\n    globals = __whmodules.globals\n\n    # public methods\n    constructor: (elements, options) ->\n      @init(elements, options)\n      if wheelzoomSingleton is not null then return wheelzoomSingleton\n      else return wheelzoomSingleton = @\n\n    init: (elements, options) ->\n      # Do nothing in IE8\n      if typeof window.getComputedStyle != 'function' then return elements\n      if elements and elements.length then addImage(element, options) for element in elements\n      else if (elements and elements.nodeName) then addImage(elements, options)\n      return elements\n\n    # private methods\n    addImage = (img, options) ->\n      if not img or not img.nodeName or img.nodeName != 'IMG' then return\n\n      wzImg = new Image img, parseOptions(options)\n      wzImgs.push wzImg\n\n    parseOptions = (options) ->\n      out = {}\n      options = options or {}\n      Object.keys(globals['defaults']).forEach (key) ->\n        out[key] = if typeof options[key] != 'undefined' then options[key]\n        else globals['defaults'][key]\n      return out\n\n    # public static methods\n    @images = -> wzImgs\n    @resetAll = -> wzImgs.forEach (wzImg) -> wzImg.reset()\n    @destroyAll = ->\n      while wzImgs.length\n        wzImgs[0].destroy()\n        wzImgs.splice(0, 1)\n","__whmodules.windowRegister ->\n  CustomEvent = (event, params) ->\n    params = params or { bubbles: false, cancelable: false, detail: undefined }\n    evt = document.createEvent 'CustomEvent'\n    evt.initCustomEvent event, params.bubbles, params.cancelable, params.detail\n    return evt\n\n  CustomEvent.prototype = window.Event.prototype\n  window.CustomEvent = CustomEvent\n","# create cross browser triggerEvent function\n__whmodules.windowRegister ->\n  window.triggerEvent = (target, eventName, params) ->\n    if params\n      e = new CustomEvent eventName, { detail: params }\n    else\n      try\n        e = new Event(eventName)\n      catch err\n        e = new CustomEvent(eventName)\n    return target.dispatchEvent(e, params)\n","(-> __whmodules.init())()\n"]}