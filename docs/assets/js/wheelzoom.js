!(function (e) { var t = {}; function o (n) { if (t[n]) return t[n].exports; var r = t[n] = { i: n, l: !1, exports: {} }; return e[n].call(r.exports, r, r.exports, o), r.l = !0, r.exports }o.m = e, o.c = t, o.d = function (e, t, n) { o.o(e, t) || Object.defineProperty(e, t, { enumerable: !0, get: n }) }, o.r = function (e) { typeof Symbol !== 'undefined' && Symbol.toStringTag && Object.defineProperty(e, Symbol.toStringTag, { value: 'Module' }), Object.defineProperty(e, '__esModule', { value: !0 }) }, o.t = function (e, t) { if (1 & t && (e = o(e)), 8 & t) return e; if (4 & t && typeof e === 'object' && e && e.__esModule) return e; var n = Object.create(null); if (o.r(n), Object.defineProperty(n, 'default', { enumerable: !0, value: e }), 2 & t && typeof e !== 'string') for (var r in e)o.d(n, r, function (t) { return e[t] }.bind(null, r)); return n }, o.n = function (e) { var t = e && e.__esModule ? function () { return e.default } : function () { return e }; return o.d(t, 'a', t), t }, o.o = function (e, t) { return Object.prototype.hasOwnProperty.call(e, t) }, o.p = '', o(o.s = './src/wheelzoom.js') }({
  './src/wheelzoom.js':
  /*! **************************!*\
  !*** ./src/wheelzoom.js ***!
  \**************************/
  /*! no static exports found */function (e, t) {
    var o, n, r, i, w, s
    /*! Wheelzoom 1.3.0
  license: MIT
  https://kwaadpepper.github.io/wheelzoom/
*/
    !(function () { function e (e, t) { t = t || { bubbles: !1, cancelable: !1, detail: void 0 }; var o = document.createEvent('CustomEvent'); return o.initCustomEvent(e, t.bubbles, t.cancelable, t.detail), o } function t () { window.wheelzoom.resetAll() }e.prototype = window.Event.prototype, window.CustomEvent = e, document.addEventListener && (document.addEventListener('fullscreenchange', t, !1), document.addEventListener('mozfullscreenchange', t, !1), document.addEventListener('MSFullscreenChange', t, !1), document.addEventListener('webkitfullscreenchange', t, !1)) }()), window.triggerEvent = function (e, t, o) { var n; if (o)n = new CustomEvent(t, { detail: o }); else try { n = new Event(t) } catch (e) { n = new CustomEvent(t) } return e.dispatchEvent(n, o) }, window.wheelzoom = (o = { zoom: 0.1, pinchSensibility: 0.3, maxZoom: -1 }, n = [], r = document.createElement('canvas'), i = !1, w = function (e, t) { if (e && e.nodeName && e.nodeName === 'IMG') { var w = {}; e.wz = {}, e.wz.reset = function () { e.wz.bgWidth = e.wz.width, e.wz.bgHeight = e.wz.height, e.wz.bgPosX = e.width / 2 - e.wz.width / 2, e.wz.bgPosY = e.height / 2 - e.wz.height / 2, g() }, e.doZoomIn = function (e) { a(-100, e = e || !1) }, e.doZoomOut = function (e) { a(100, e = e || !1) }, e.wz.onwheel = function (t) { var o = 0; t.preventDefault(), t.deltaY ? o = t.deltaY : t.wheelDelta && (o = -t.wheelDelta), o < 0 ? e.doZoomIn(!0) : e.doZoomOut(!0) }, e.doDrag = function (t, o) { e.wz.bgPosX = t, e.wz.bgPosY = o, g() }, e.wz.drag = function (t) { var o, n, r; switch (t.preventDefault(), t.type) { case 'touchstart':case 'touchmove':i = t.touches.length === 2, o = t.touches[0].pageX, n = t.touches[0].pageY; break; default:o = t.pageX, n = t.pageY } switch (e.wz.previousEvent.type) { case 'touchstart':case 'touchmove':i = e.wz.previousEvent.touches.length === 2, o -= e.wz.previousEvent.touches[0].pageX, n -= e.wz.previousEvent.touches[0].pageY; break; default:o -= e.wz.previousEvent.pageX, n -= e.wz.previousEvent.pageY } if (i) return r = Math.sqrt(Math.pow(t.touches[1].pageX - t.touches[0].pageX, 2) + Math.pow(t.touches[1].pageY - t.touches[0].pageY, 2)), void (Math.sqrt(Math.pow(e.wz.previousEvent.touches[1].pageX - e.wz.previousEvent.touches[0].pageX, 2) + Math.pow(e.wz.previousEvent.touches[1].pageY - e.wz.previousEvent.touches[0].pageY, 2)) - r < 0 ? e.doZoomIn(!0) : e.doZoomOut(!0)); var w = e.wz.bgPosX + o; var s = e.wz.bgPosY + n; e.doDrag(w, s), window.triggerEvent(e, 'wheelzoom.drag', { bgPosX: e.wz.bgPosX, bgPosY: e.wz.bgPosY, xShift: o, yShift: n }), e.wz.previousEvent = t, g() }, e.wz.removeDrag = function () { window.triggerEvent(e, 'wheelzoom.dragend', { x: e.wz.bgPosX - e.wz.initBgPosX, y: e.wz.bgPosY - e.wz.initBgPosY }), document.removeEventListener('mouseup', e.wz.removeDrag), document.removeEventListener('mousemove', e.wz.drag), document.removeEventListener('touchend', e.wz.removeDrag), document.removeEventListener('touchmove', e.wz.drag) }, e.wz.draggable = function (t) { window.triggerEvent(e, 'wheelzoom.dragstart'), t.preventDefault(), e.wz.previousEvent = t, t.type === 'touchstart' ? (document.addEventListener('touchmove', e.wz.drag), document.addEventListener('touchend', e.wz.removeDrag)) : (document.addEventListener('mousemove', e.wz.drag), document.addEventListener('mouseup', e.wz.removeDrag)) }, e.wz.destroy = function (e, t) { e.removeEventListener('wheelzoom.destroy', e.wz.destroy), e.removeEventListener('wheelzoom.reset', e.wz.reset), e.removeEventListener('mouseup', e.wz.removeDrag), e.removeEventListener('mousemove', e.wz.drag), e.removeEventListener('mousedown', e.wz.draggable), e.removeEventListener('touchleave', e.wz.removeDrag), e.removeEventListener('touchmove', e.wz.drag), e.removeEventListener('touchstart', e.wz.draggable), e.removeEventListener('wheel', e.wz.onwheel), e.style = t.style, e.src = t.src; for (var o = 0; o < n.length; o++)n[o] === e && n.splice(o, 1) }.bind(null, e, { style: e.getAttribute('style'), src: e.getAttribute('src') }), t = t || {}, Object.keys(o).forEach(function (e) { w[e] = void 0 !== t[e] ? t[e] : o[e] }), n.push(e); var s = setInterval(function () { e.complete && u(), clearInterval(s) }, 100) } function g () { var t = 0; var o = e.width; var n = 0; var r = e.height; var i = e.width; var w = e.height; var s = e.wz.bgPosX; var g = e.wz.bgPosX + e.wz.bgWidth; var a = e.wz.bgPosY; var u = e.wz.bgPosY + e.wz.bgHeight; var d = e.wz.bgWidth; var h = e.wz.bgHeight; d < i ? s < t ? e.wz.bgPosX = t : g > o && (e.wz.bgPosX = o - e.wz.bgWidth) : s > t ? e.wz.bgPosX = t : g < o && (e.wz.bgPosX = o - e.wz.bgWidth), h < w ? a < n ? e.wz.bgPosY = n : u > r && (e.wz.bgPosY = r - e.wz.bgHeight) : a > n ? e.wz.bgPosY = n : u < r && (e.wz.bgPosY = r - e.wz.bgHeight), e.style.backgroundSize = e.wz.bgWidth + 'px ' + e.wz.bgHeight + 'px', e.style.backgroundPosition = e.wz.bgPosX + 'px ' + e.wz.bgPosY + 'px' } function a (t, o) { o = o || !1; var n = i ? w.zoom * w.pinchSensibility : w.zoom; var r = e.width / 2; var s = e.height / 2; var a = r - e.wz.bgPosX; var u = s - e.wz.bgPosY; var d = a / e.wz.bgWidth; var h = u / e.wz.bgHeight; t < 0 ? (w.maxZoom === -1 || (e.wz.bgWidth + e.wz.bgWidth * n) / e.wz.width <= w.maxZoom) && (e.wz.bgWidth += e.wz.bgWidth * n, e.wz.bgHeight += e.wz.bgHeight * n) : (e.wz.bgWidth -= e.wz.bgWidth * n, e.wz.bgHeight -= e.wz.bgHeight * n), e.wz.bgPosX = r - e.wz.bgWidth * d, e.wz.bgPosY = s - e.wz.bgHeight * h, o && (t < 0 ? setTimeout(function () { window.triggerEvent(e, 'wheelzoom.in', { zoom: e.wz.bgWidth / e.wz.width, bgPosX: e.wz.bgPosX, bgPosY: e.wz.bgPosY }) }, 10) : setTimeout(function () { window.triggerEvent(e, 'wheelzoom.out', { zoom: e.wz.bgWidth / e.wz.width, bgPosX: e.wz.bgPosX, bgPosY: e.wz.bgPosY }) }, 10)), e.wz.bgWidth <= e.wz.width || e.wz.bgHeight <= e.wz.height ? window.triggerEvent(e, 'wheelzoom.reset') : g() } function u () { if (e.src !== e.wz.cachedDataUrl) { var t = window.getComputedStyle(e, null); e.wz.width = parseInt(t.width, 10), e.wz.height = parseInt(t.height, 10), e.wz.bgWidth = e.wz.width, e.wz.bgHeight = e.wz.height, e.wz.bgPosX = e.wz.initBgPosX = (e.width - e.wz.width) / 2, e.wz.bgPosY = e.wz.initBgPosY = (e.height - e.wz.height) / 2, (function (e) { e.style.backgroundImage = 'url("' + e.src + '")', e.style.backgroundRepeat = 'no-repeat', r.width = e.naturalWidth, r.height = e.naturalHeight, e.wz.cachedDataUrl = r.toDataURL(), e.src = e.wz.cachedDataUrl }(e)), e.style.backgroundSize = e.wz.width + 'px ' + e.wz.height + 'px', e.style.backgroundPosition = e.wz.bgPosX + 'px ' + e.wz.bgPosY + 'px', e.addEventListener('wheelzoom.reset', e.wz.reset), e.addEventListener('wheelzoom.destroy', e.wz.destroy), e.addEventListener('wheel', e.wz.onwheel), e.addEventListener('mousedown', e.wz.draggable), e.addEventListener('touchstart', e.wz.draggable) } } }, (s = function (e, t) { if (e && e.length) for (var o = 0; o < e.length; o++)w(e[o], t); else e && e.nodeName && w(e, t); return e }).images = function () { return n }, s.resetAll = function () { n.forEach(function (e) { e.wz.reset() }) }, s.destroyAll = function () { for (;n.length;)n[0].wz.destroy() }, typeof window.getComputedStyle !== 'function' ? function (e) { return e } : s)
  }
}))
// # sourceMappingURL=wheelzoom.js.map
